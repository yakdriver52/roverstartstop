#!/bin/bash

# The only errors we might encounter here are in the file moving section.

# Get IPs and users
. ./config.sh

DATETIME=`cat missionstartdt`

# Stop ROS on VEHICLE
echo "Stopping VEHICLE..."
ssh $VEHICLE_USER@$VEHICLE_IP "pkill -2 record"
if [ $SIMULATED -eq 0 ];
then
  ssh $VEHICLE_USER@$VEHICLE_IP "killall -2 roslaunch"
fi
ssh $VEHICLE_USER@$VEHICLE_IP "pkill -2 roscore"
echo "Done."

pkill -9 QGroundControl
pkill -2 rqt

if [ $SIMULATED -eq 0 ];
then
  scp *.tlog $SERVER_USER@$SERVER_IP:$DATETIME
  rm *.tlog
fi

echo "Stopping server. Please wait for files to be moved into the $DATETIME directory on the server..."

# Video recording may have been stopped manually before gcstop runs. If gstd
# is still running, we know to run videostop.
rm pipelines
ssh $SERVER_USER@$SERVER_IP "ps -ef|grep gstd|grep -v grep" >/dev/null
if [ $? -eq 0 ];
then
  ./videostop
fi

ssh $SERVER_USER@$SERVER_IP "mkdir $DATETIME"
ssh $SERVER_USER@$SERVER_IP "mv $DATETIME.mp4 $DATETIME"
BAGFILE=`ssh $VEHICLE_USER@$VEHICLE_IP "ls *.bag"`
scp $VEHICLE_USER@$VEHICLE_IP:$BAGFILE . >/dev/null
ssh $VEHICLE_USER@$VEHICLE_IP "rm *.bag" 
scp $BAGFILE $SERVER_USER@$SERVER_IP:$DATETIME/ >/dev/null
rm $BAGFILE

echo "Move finished; files are stored in the $DATETIME directory on the server."
echo 
DIR=`ssh $SERVER_USER@$SERVER_IP "df -t vfat --output=target|grep /"`
if [ "$DIR" != "" ]; 
then
  echo "Would you like the files copied to the removable drive? [Y/n]"
  read RESP
  if [ "$RESP" != "n" ] && [ "$RESP" != "N" ];
  then
    ssh $SERVER_USER@$SERVER_IP "sudo cp -R $DATETIME $DIR" 
    if [ $? -eq 0 ];
    then
      echo "Copied $DATETIME to removable drive."
    else
      echo "Copy failed, likely due to lack of space."
    fi
  fi
fi

echo
echo "Components can be powered off or another mission may be started."

echo
echo "Press ENTER to exit this window."
read ENTER

exit 0

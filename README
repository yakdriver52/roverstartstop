# Ground Control Start and Stop Scripts for Tunnel Drone and Rover

## PACKAGE CONTENTS
*gcstart  -- Runs a system check followed by running the start scripts for the vehicle type specified in the config
*gcstop  -- Shuts down all tasks that were created when gcstart was run
*videostop  -- Stops video recording on server
*systemcheck  -- Checks system components for common problems
*config.sh  -- Users and IPs of the server, VEHICLE, and encoder.
*serverstart_$VEHICLE_TYPE.sh  -- Starts the server script for the VEHICLE_TYPE.
*start_$VEHICLE_TYPE.sh  -- Starts the script to run the commands for the VEHICLE_TYPE
*gcstart.desktop  -- GCStart, GCStop, and SystemCheck files for Launcher
*gcstop.desktop
*systemcheck.desktop
#### Icons for the Launcher
*dronefly.svg  
*droneland.svg
*checkmark.svg

### Licensing
This attribution is required for using the icons.
Icons made by Roundicons and srip from www.flaticon.com are licensed by 
CC 3.0 BY.

## Setup

### Gstreamer (optional)
Install Gstreamer Daemon (gstd) on the server per these instructions:
https://developer.ridgerun.com/wiki/index.php?title=GStreamer_Daemon_-_Building_GStreamer_Daemon

### Installing the Scripts

Clone this repo to the home directory
```
git clone http://versatol.ddns.net/scm/td/gcstartstop.git
```
You should then copy the scripts in to the home directory of the system launching the scripts.
The scripts requriement to be in the home directory will be fixed at a later date.
You only need to have the scripts on the master computer, the other computers in the system needs the following setup

### System Setup
Only one manchine is required to operate the scripts but the scripts were written with 3 computers involved 
* $VEHICLE
* server
* Laptop
You will need to install the following on all machines in the system.
```
sudo apt install screen
sudo apt install openssh-server
```
These machines need to communicate with each other without human involvement.
To do so, they need to share their public ssh keys with each other. On each machine, run
```
ssh-keygen -b 4096
```
This should only be done once and will produce an 
id_rsa.pub file in ~/.ssh that will look something like:
```
ssh-rsa AAAAB3NzaC1yc...bWYWoePaEcKmfGLWnOlFyrqzwP6n9K4mhmYT+r9ysmEgEFLw== gcs@GCS-BENCH-8400
```
That line needs to be added to ~/.ssh/authorized_key file on all the machines in the system.
machines.

Some commands run on the server require sudo and we don't want to be prompted
for a password each time one is executed. Run 
```
sudo visudo
```
and add the following line to the *bottom* of the file:
```
$USER ALL=(ALL) NOPASSWD:ALL
```

Edit .bashrc on the three machines and add these 4 lines at the bottom:
```
export ROS_MASTER_URI="http://<IP of VEHICLE>:11311"
export ROS_HOSTNAME=<IP of machine>
export PATH:$PATH:
export PATH:$PATH:/gcstartstop
```
Exit the editor. Type 
```
source ~/.bashrc
```
to inherit the new settings.

## Using the scripts

Their are many ways to use the scripts, they can be run from the command line or be run from a launcher.
### Ubuntu 18.04 Mate (prefered)
* Right click on desktop
* Create new launcher
* Select script in the home folder
* label launcher based on scripts named
* Select ICON from the included SVGs

### Stock Ubuntu
The three desktop files need to be moved to ~/.local/share/applications on the 
GCS. Once in place, use the File Browser to navigate to that directory and drag 
them to the launcher on the left of the desktop. You will need to select
View->Show Hidden Files to see the .local directory.

### Windows (Expermental)

### Terminal/ssh
Navigate to the home folder and type
```
./script_name or ./script_name.sh
```

## Changing the Config
Changing the config file is an easy way to reconfigure the scripts to work with the drone and the Rover
as well as have the ability to specify the computers and IPs in the system. The config will have 3 main 
variables to change.
* USER
* IP
* VEHICLE_TYPE
An example of a the config file will look like the following
```
#!/bin/bash

VEHICLE_TYPE=rover
VEHICLE_IP=192.168.1.172
VEHICLE_USER=versatol

#SERVER ON DRONE SUPPORTS VIDEO AND TELEOP
#SERVER ON ROVER SUPPORTS ROS JOY
SERVER_IP=192.168.1.172
SERVER_USER=versatol

ENCODER_IP=192.168.1.45
GSTD_CLIENT="gstd-client -q -a $SERVER_IP"
# Change this to zero when using an actual vehicle
SIMULATED=0
# Only one of these should be uncommented
ENCODER=axis
# ENCODER=nvidia

red=`tput -Txterm-256color setaf 1`
green=`tput -Txterm-256color setaf 2`
reset=`tput -Txterm-256color sgr0`
```
Make sure you always edit the config file to match your setup.

## Changing the Scripts





### Other Stuff to fix later in the readme


Bring up QGC and go to general settings -> Video Source. Select "RTSP Video 
Stream" from the Source dropdown. Enter 
"rtsp://192.168.1.45/axis-media/media.amp" in the RTSP URL box. NOTE: The IP 
address of the encoder may be different. This only needs to be done once 
unless a different VEHICLE is used (the encoder IP may be different). Exit QGC.



Edit config.sh on GCS to match the IPs and users of the different machines. 
This only needs to be done on the GCS and it will copy it to the server and
VEHICLE each time GCStart is run. 

All scripts are installed on the GCS in the home directory of the versatol user.
The scripts gcstart, gcstop, videostop, systemcheck, and config.sh run on the 
GCS.
The script serverstart.sh runs on the server. It is copied into place by 
gcstart.
The script rosstart.sh runs on the vehicle companion computer. It is also 
copied into place by gcstart.


_RUNNING_

Before leaving headquarters, it is recommended to run SystemCheck to ensure
all components are in good shape. This is also run automatically in GCStart
when starting a mission.
To begin a mission, click on the GCStart icon in the launcher and follow the
instructions in the terminal. QGroundControl will be brought to the foreground 
after everything has started.
To begin recording video, return to the terminal and hit ENTER. Video can be 
stopped manually by running ./videostop or automatically when gcstop is run.
To end a mission, click on the GCStop icon in the launcher. Files will be moved 
into a directory named for the date/time at the start of the mission and the 
user will be notified when it is safe to power down or start another mission.

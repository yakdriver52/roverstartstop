#!/bin/bash

# gcstartstop V2
# Modified by Alayna Ivan, alayna.ivan@hotmail.com, 10/23/2019
# Copyright VersaTOL, LLC 2019

# Preflight check of system components

. ./config.sh

# Ensure VEHICLE is powered up and on the network.
if ! ping -c 1 -W 3 $VEHICLE_IP &>/dev/null
then
  echo
  echo "${red}Cannot communicate with VEHICLE!${reset}"
  echo
  echo "Please check the following and try again:"
  echo "1. Is the VEHICLE powered on?"
  echo "2. Is it connected to the network?"
  echo "3. Is the VEHICLE_IP address correct in config.sh?"
  echo
  echo
  echo "Press ENTER to exit this window."
  read ENTER
  exit 1
else
  echo
  echo "${green}VEHICLE is powered on and connected to the network.${reset}"
fi

# Ensure server is powered up and on the network.
if ! ping -c 1 -W 3 $SERVER_IP &>/dev/null
then
  echo
  echo "${red}Cannot communicate with server!${reset}"
  echo
  echo "Please check the following and try again:"
  echo "1. Is the server powered on?"
  echo "2. Is it connected to the network?"
  echo "3. Is the SERVER_IP address correct in config.sh?"
  echo
  echo
  echo "Press ENTER to exit this window."
  read ENTER
  exit 1
else
  echo
  echo "${green}Server is powered on and connected to the network.${reset}"
fi

# Ensure the SERVER_USER is correct.
if ! ssh $SERVER_USER@$SERVER_IP "ls" >/dev/null
then
  echo
  echo "${red}Unable to log in to server!${reset}"
  echo
  echo "Please check the SERVER_USER line in config.sh and try again."
  echo
  echo
  echo "Press ENTER to exit this window."
  read ENTER
  exit 1
fi

# Ensure the VEHICLE_USER is correct.
if ! ssh $VEHICLE_USER@$VEHICLE_IP "ls" >/dev/null
then
  echo
  echo "${red}Unable to log in to VEHICLE!${reset}"
  echo
  echo "Please check the VEHICLE_USER line in config.sh and try again."
  echo
  echo
  echo "Press ENTER to exit this window."
  read ENTER
  exit 1
fi

## Check available drive space on server. Video records at approximately 
## 12MB/minute.
SPACE=`ssh $SERVER_USER@$SERVER_IP "df -t ext4 --output=source,avail -B12M"`
AVAIL1=`echo $SPACE|cut -f 4 -d ' ' -`
SPACE=`ssh $SERVER_USER@$SERVER_IP "df -t vfat --output=source,avail -B12M"`
AVAIL2=`echo $SPACE|cut -f 4 -d ' ' -`
if [ $AVAIL1 -lt 60 ];
then
  echo "${red}Less than 60 minutes of video storage available.${reset}"
  echo
  echo "Would you like old mission directories deleted automatically? [Y/n]"
  read RESP
  if [ "$RESP" == "n" ] || [ "$RESP" == "N" ]; 
  then
    echo
    echo "${red}Please free up disk space manually before deploying on a mission!${reset}"
    echo
    echo "Press ENTER to exit this window."
    read ENTER
    exit 1
  else
    ssh $SERVER_USER@$SERVER_IP "rm -rf 20*"
  fi
else
  echo
  echo "${green}Primary drive has space for approximately $AVAIL1 minutes of video storage.${reset}"
fi

if [ "$AVAIL2" == "" ];
then
  echo
  echo "${red}No removable drive present!${reset}"
  echo
  echo "Video will be stored on the primary drive and can be copied later."
  echo "If this is not OK, please connect a removable drive and try again." 
  echo "Is this OK? [Y/n]"
  read RESP
  if [ "$RESP" == "n" ] || [ "$RESP" == "N" ];
  then
    exit 1
  fi
elif [ $AVAIL2 -lt 30 ];
then
  echo "${red}Less than 30 minutes of storage available on removable drive.${reset}"
  echo
  echo "Would you like old mission directories deleted automatically? [Y/n]"
  read RESP
  if [ "$RESP" == "n" ] || [ "$RESP" == "N" ]; 
  then
    echo
    echo "${red}Please free up disk space on the removable drive manually before deploying on a mission!${reset}"
    echo
    echo "Press ENTER to exit this window."
    read ENTER
    exit 1
  else
    DIR=`ssh $SERVER_USER@$SERVER_IP "df -t vfat --output=target"`
    ssh $SERVER_USER@$SERVER_IP "sudo rm -rf ${DIR}/20*"
  fi
else
  echo "${green}Removable drive has space for approximately $AVAIL2 minutes of video storage.${reset}"
fi

# Check the battery voltage
# First start the UPS service
ssh $SERVER_USER@$SERVER_IP "sudo chmod 0666 /dev/bus/usb/001/002" >/dev/null
ssh $SERVER_USER@$SERVER_IP "sudo /usr/local/ups/sbin/upsdrvctl start" >/dev/null 2>/dev/null
ssh $SERVER_USER@$SERVER_IP "sudo /usr/local/ups/sbin/upsd -u ups"  >/dev/null 2>/dev/null
VOLTAGE=`ssh $SERVER_USER@$SERVER_IP "/usr/local/ups/bin/upsc openups@localhost|grep battery.voltage: |cut -f 2 -d ' '"` >/dev/null
if  ! echo "$VOLTAGE < 11.8"|bc >/dev/null
then
  echo
  echo "${red}Battery voltage ($VOLTAGE) less than 11.8. Please charge before flying.${reset}"
  echo
  echo "Press ENTER to exit this window."
  read ENTER
  exit 1
else
  echo 
  echo "${green}Battery voltage is acceptable.${reset}"
fi

## Check ALL THE THINGS!  What else could possibly go wrong?


# If we get to this point, everything checks out fine.

echo
echo "${green}All system tests passed.${reset}"
echo
if [ -z $1 ];
then
  echo "Press ENTER to finish."
  read ENTER
fi

exit 0
